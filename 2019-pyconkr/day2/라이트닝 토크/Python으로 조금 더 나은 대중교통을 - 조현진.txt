https://youtu.be/yYr2cEHDJR8

다음 라이트닝토크는 조현진 님이시고요. 

파이썬으로 조금 더 나은 대중교통을 발표를 해주시겠습니다.

큰 박수로 맞이해주세요.

(박수)

-네, 안녕하십니까? 조현진입니다. 

파이썬을 조금 더 나은 대중교통을이라는 주제로 발표를 하겠습니다. 

말이 조금 빠르기는 할 텐데 잘 알아주시면 감사하겠고요. 슬라이드 보시면 되겠습니다.

작년에도 발표했고요.

제가 이번에도 비빔밥으로 유명한 도시에서 왔다고 알아주시면 감사하겠습니다. 

그리고 마찬가지로 제가 기간제로 똑같은 기간에서 근무 중이고요.

저번에 전산 팀에 있었습니다. 이번에는 교통부서에 있습니다. 

제로섬 게임이라 민원 장난 아닙니다. 고통의 부서에서 만인이 기피하는 부서로 갔습니다.

지금 지역현황 이렇게 됩니다.

민원이 장난 아닙니다.

대중교통현안이 상당히 심각한데 가령 경복궁에서 용산역, 여기서 가려면 20분 걸리죠.

현재 저희 지역, 어떤 버스는 10분 만에 가고 어떤 버스는 20분만에 가고 최대 13분까지 차이가 납니다. 이용자 입장에서 예측이 어렵습니다.

우리 원인이 뭐냐. 운행시간에 대한 명확한 지침이 없습니다. 

그냥 일괄적으로 시간을 주어졌으니 알아서 기사들이 가야 됩니다.

타지역 사례를 조사했더니 중간정류장을 선정해서 되어 있습니다.

 그러면 우리도 중간정류장을 경유하는 시각이라도 잡아보자! 어떻게?

기존에 하던 방법을 봤습니다. 

한땀한땀 한손으로 엑셀로 따로 옮겼습니다. 이거 다 한땀한땀 했더라고요.

그래서 어떻게 했냐고 했더니 4일치를 조사하는 데 4주 걸렸답니다.

당연히 데이터 틀린 것도 많습니다. 

이걸 어떻게 해? 했는데 저희 버스가 419대, 하루에 4090회를 어떻게 손으로 조사합니까?

 이건 미친 짓이야! 할 수 없어! 하지만 저희 파이썬은 할 수 있잖아?

그런데 업무용망과 클라이언트망이 분리되어 있습니다.

심지어 BIS는 다른 과에서 관리를 해요.

그냥 공공데이터로 불러오자. 어떻게 하면 되겠죠.

그래서 결국 만들었습니다.

다 활용했습니다.

단순히 경유시각을 추출한 것은 아니고 표준정규분포를 그릴 것으로 가정했습니다. 

대충 언제 올 거라고 알잖아요. 

그래서 이것보다 빨리 지나가지 말라는 취지로 한 거고요. 

극단값 10%는 제거를 했습니다.

여기서 판다스를 활용해서 표준분포를 활용하고 제트값을 산출해서 예측하게 만들었습니다.

그런데 외삽은 판다스에서 안 되기 때문에 다른 데서 했습니다.

그래서 만들었습니다. 노선이 120개인데 어떤 거는 아침에 오는 경로, 

밤에 가는 경로, 점심 때 가는 경로가 다 달라요. 손으로 할 수가 없고 이런 게 380개 정도 됩니다.

 손으로 할 수 없겠죠. 그래서 만들었습니다.

추출결과물, 그래서 지금 보다시피 이렇게 했더니 새로운 요구사항이 나왔습니다.

종점에 도착하는 시간도 뽑아주세요! 했는데 또 문제가 생겼습니다.

생각보다 버스들이 종점을 잘 안 가요. 

중간에 밥먹는다고 빠지고 버스를 돌리고, 안 돼요! (웃음)

그래서 마지막에 정착한 정류장을 탐색했습니다. 

그런데 문제, 제가 맥북으로 하고 있습니다. 4년 됐어요. 그런데 이게 데이터가 되게 큽니다.

제가 세 달치를 탐색했습니다. 그런데 제 맥북이 램이 8기가예요. 죽는 줄 알았어요.

6월만 봤더니 1300만 건. 마지막에 운행종료시간까지 1시간. 뭐 4년 묵은 노트북치고는 괜찮지 않나요?

아쉬운 점, 시내버스 업체의 사정으로 인해서 중간시간표 시행이 연기됐습니다. 

실컷 삽질하고 밤샜는데 시행 못했고요.

이거 업체들에서 조금 더 개선할 수 있게 추천할 수 있는 시스템을 만들고 싶었는데 시간과 예산이 없었어요.

지금 예산 지원받은 게 하나도 없어요.

결론, 이거 쓰시던 분들이라면 판다스에 붙여서 쓰기 쉽습니다. 

그리고 공공기관에서 파이썬 판다스 최고입니다.

그리고 좋은 자리 있으면 추천해주세요. 저 지금 하루 6시간 근무에 월급 140이라서 좋은 자리 있으면 얼마든지 갑니다. 감사합니다.

(박수)

-(사회자) 네, 다시 한 번 조현진 님께 큰 박수 부탁드릴게요.
