https://www.youtube.com/watch?v=JRiCsrNJujc

안녕하세요?

반갑습니다.

김재윤이라고 합니다.

바로 발표 시작하겠습니다.

제목 보시면 법률은 법률이고 네트워크는 네트워크인데 조금 의아해 하실 수도 있는데, 콘텐츠는 이렇습니다.

먼저 소개를 해드리고 법률이라는 게 뭐냐, 먼저 말씀을 드리고요.

법률에서 네트워크가 왜 연결이 되느냐, 2번 네트워크를 설명드리고요.

그다음에 익숙하신 라이브러리 네트워크 X, 그리고 파워로우, Visualization까지 보여드리고 왜 파이썬이냐?

파이콘이니까 그거를 마지막으로 하고 발표를 마치도록 하겠습니다.

제 소개인데요.

저는 자신있게 비개발자라고 말씀을 드리겠습니다.

알파로우라고 하는 저희 키노트에도 김무성 님 발표 보셨습니까?

사이버스라고 하는 거를 만들었거든요.

거기 중에 하나의 구성요소인 알파로우라고 하는 리걸테크를 해보자고하는 사람들의 모임입니다.

거기에서 파이썬을 배웠고요.

국회에서 IT 법제를 많이 했었어요. 

단통법이라든가 소프트웨어법이라든가 그런 것들을 법안 초안을 만들어가지고 양복점 같은 겁니다.

의원님들이 꿈에서 이런 법을 만들고 싶다고 생각을 하신 거예요.

주문서를 써가지고 저희한테 날려요.

그러면 저희는 그대로 만들어드립니다.

실제로 작동하는 법률 코드로 만들어가지고 드리는 거거든요.

일종의 법 공장이죠.

그런데 진짜 많이 쏟아질 때는 1 영업일당 1개씩 법률안을 찍어냈어요.

그러다 사진은 눈 깜은 거 같지만 실제로 뜬 겁니다.

법률 데이터에 눈을 떴다 해서 여기에 나오게 됐어요.

파이콘에 도전하자는 건 아니고 파이콘 관계 없는 분들인데 매스매티카 만든 분인데 이분 모셔왔습니다.

법률과 프로그래밍 언어는 임의적 규칙 체계인 점이서 유사하다.

300년 전에 돌아가신 라이프니츠 님입니다.

미분적분 만드신 분입니다.

라이프니츠도 법률 컴퓨테이션 하려는 꿈이 있었으나 이루지 못했습니다.

기호를 다 컴퓨터 용어로 정의하겠다고 하신 분인데 돌아가셨어요.

사실입니다.

그래서 라이프니츠 꿈을 실현해보자, 울프람님이 천재시다 보니까 거기까지 했으면 좋았는데 더 나갔어요.

기계가 읽을 수 있는 법률을 만들어서 AI를 위한 헌법을 만들자, 사람하고 AI가 직접 소통할 수 있다.

그리고 울프람 랭기지니까 가능한 일이다.

그렇습니다.

파이썬으로도 할 수 있지 않을까요.

왜 진짜로 갔느냐?

울프람 님이 천재이신 게 비슷해요. 

파이썬을 배워 보면서 느낀 건데 조건문에 의해 효력이 발생한다는 점 법률과 효력이 동일합니다.

데피니션이 있는데 디파인을 해가지고 모듈이나 이런 거 함수 만들잖아요.

디파인 앞에서 해두면 뒤에서 불러오고 쓸 수 있어요.

그래서 그런 식으로 법률에서도 민법상 재단법인에 따른다 하면 민법을 긁어와서 실행시키는 겁니다.

그다음에 4줄 띄어쓰기인데 법률에도 있고요.

헌, 민, 형법이라고 하는 기본 모듈에서 입법을 통해서 라이브러리를 확장해 나갑니다.

모든 법률 내용은 오픈 소스입니다.

파이썬이나 코드나 비슷하지 않을까요.

저쪽은 나폴레옹 법전입니다.

200년이 넘었죠.

그래서 비슷한 문제가 발생해요.

오픈소스 코드를 하다 보면 이런 일들이 일어납니다.

어떤 법에서 인용을 하고 있는데 인용이 안 돼요.

깨졌어요.

찾아 보니까 없어졌어요.

실행이 안 돼요.

그래서 누가 오픈소스 잘못 만들어서 깃허브에 올렸는데 붙여 놓으니까 다 망해버리는 거예요.

함부로 복사해서 쓰면 안 돼요.

항상 코드는 검증을 해야 합니다.

시행예정법률 개정 오류인데요.

법률은 특이한 게 개정을 하면 한참 뒤에 시행이 됩니다.

사람들 보고 준비 시간을 주는데 그런데 법률을 시행 되기 전에 또 바꾸는데 잘못된 개정을 해서 덮어쓰기 잘못하면 코드가 와장창 깨집니다.

법률에도 깃허브가 필요한 게 아닌지 생각이 되고요.

마지막으로 리팩토링 주제로 발표를 했었는데 알기 쉬운 법률이 한자, 일본어 툴로 되어 있는 법률을 깨끗하게 만드는 작업입니다.

원래 같은 기능을 하도록 하는 게 리팩토링인데 리팩토링 했다고 생각을 하는데 잘못한 거예요.

그래서 특허법상 문제가 발생해서 일정 기간 동안 다수의 성 범죄자들이 구제를 받았어요.

큰 사고가 난 겁니다.

리팩토링 사고죠.

재형법정주의기 때문에 법률을 잘못 만들면 우리가 처벌을 할 수가 없습니다.

왜 이런 문제들이 생겨나는가?

저는 법률의 복잡성 증대 때문이 아닌가 조심스럽게 추측을 해봤습니다.

글자 1700만 자에 법률인용 4만 건인데 데이터는 문제가 없지만 우리가 읽고 활용을 해야 하고 연 7% 성장이고 법에는 이런 게 있어요.

법률의 부지를 용서해서는 안 된다.

살인 해 놓고 법률 몰랐다고 해서 처벌을 안 할 수 없습니다.

그런데 법률이 너무 복잡해서 못 읽는 상황이 오면 법률의 부제를 용서해야 하는 시대가 오는 거 아닌가 하는 영국의 톰 빙함이라는 님이 말씀하셨습니다.

시스템의 복잡성이 증대하고 있는데 기계의 도움이 필요한 거 아니냐?

기획은 거창했는데 단순한 데이터 분석, 멋있는 행동 아닙니다.

아주 단순한 데이터 분석부터 한번 같이 시작해보도록 하겠습니다.

먼저 데이터 분석할 때는 도메인 영역에서 데이터가 어떻게 생겼는가 봐야겠죠.

우리 네트워크 분석 다 잘 아시기 때문에 빨리 넘어갈게요.

한붓 그리기 문제인데 쾨니히스베르크 다리 문제, 한 번에 어떻게 건너나요.

데이터 추상화의 방법입니다.

섬하고 다리 그림을 갖다가 점과 선으로 단순화시켰는데 점이 노드이고 점을 연결하는 게 에지, 링크라고 얘기를 합니다.

우리는 법률이 섬이 되고 법률끼리 인용하는 관계가 다리가 되겠습니다.

네트워크는 두 가지로 구성돼 있습니다.

네트워크 노드하고 연결이 구성되어 있는데 그 특성들을 한번 보겠습니다.

크기가 천차만별인데 한 줄짜리도 있습니다.

판사정원법은 한 줄입니다.

1천 개가 넘는 법률들도 있습니다.

민법이나 이런 큰법들.

그다음 우리 정보 생긴 지 70년인데 그 전의 법령들도 우리한테 영향을 미쳐요.

조선총독부 법령도 지금은 다 정리가 되었는데 아직도 그 흔적이 남아 있습니다.

법률 네트워크가 문제가 네트워크 변화가 너무 많이 돼요.

옆의 그림을 굳이 가져온 이유는 얼마나 다이내믹한 데이터인지 보여드리려고
수많은 법들이 합쳐져서 자본시장법이라고 하는 큰 법이 생겼는데 핀테크 하시는 분들은 아시겠지만 이 법을 읽으려면 힘들어요.

연결인용인데 법률끼리 인용하는 게 뭐냐?

뒤에서 보겠습니다.

그런데 이 인용의 특징은 보통 우리 네트워크 분석할 때 페이스북 같은 거는 친구다 아니다, 양방향인데 이 법률 네트워크는 방향성이 있습니다.

인용네트워크랑 똑같아요.

학술 인용 네트워크, SCI에 강도가 있습니다. 

그리고 민법 3번, 4번 인용했다고 데이터를.

연결 종류는 크게 두 가지가 있는데 인용, 적용, 준용은 코드 디파인이랑 같습니다.

어디 설정을 미리 불러와서 쓰는 겁니다.

소프트웨어란 소프트웨어진흥법에 따른 소프트웨어를 말한다.

정리를 해놨습니다.

한번 누가 코드를 쓰면 불러오면 됩니다.

그런데 문제는 특례예요.

이런 거는 그런데...

국유재산법은 전대, 서버리스라고 하는데 한 번 빌린 국유재산을 또 빌려주는 거를 하지 말라고 하고 있어요.

공유경제를 하지 말라는 거예요.

그런데도 불구하고 국유재산을 전대해서 사용하게 할 수 있다고 하는 겁니다.

역점입니다.

국유재산법에 보면 안 되는 행위인데 되는 거예요.

그런데 이 법을 보기 전까지 모르는 거예요.

브리타입니다.

법률이 1400개인데 우리가 다 알 수 있을까요.

이 연결의 방향이 중요한데 내가 어떤 A라는 법률이 다른 법률을 인용하는 연결, 이거는 타법인용연결이라고 해서 밖으로 나가는 겁니다.

입법자들이 의도한 겁니다.

쭉쭉 써놓은 거예요.

단기간에 많이 만들 수 있습니다.

법 읽어보면 알 수 있지만 문제는 피인용입니다.

이 법률이 어디에서 인용되는가?

특히 특례 인용될 때 문제가 큽니다.

이 법 이런 줄 알았는데 저 법에서는 아니네 하고 알 수 있는데 피인용이 안 보입니다.

역링크가 없습니다.

위키문서에 있는 그래서 의도적으로 설계, 증감이 불가능해서 분석해봐야 합니다.

그래서 오늘 제가 하려는 게 이겁니다.

한번 해볼게요.

법률은 어떻게 변해왔는가?

데이터가 지금 사실 선행 연구에서 했던 데이터입니다.

우리 국회 법률 웹 페이지를 크롤링을 7번 해서 스냅샷을 7번 찍었습니다.

변화를 볼 거예요.

그런데 이거는 생략할 거예요.

크롤링은 반복작업이 많잖아요.

외교하고 소시지 만드는 거는 속을 보려고 하지 말라고 비스 마르크가 하신 것처럼 저희도 이거를 생략하고 넘어가도록 하겠습니다. 

자세한 코드는 넘어갈게요.

데이터 빈 리스트 만들어서 판다스로 리스하고 코드는 간단합니다.

그래서 데이터 네트워크 불러와서 한 가지 특징이 우리가 그대로 데이터를 쓸 수 없어요.

여기서 네트워크에서 쓰는 그래프라고 하는 거를 넣어줘야 해요.

그러니까 네트워크라는 거는 우리 리스트, 판다스 데이터프레임 워커랑 다릅니다.

네트워크X에는 그래프 종류가 여러 가지가 있는데 그래프 성질 보셨죠. 

강도이고 디랙션은 연결의 방향입니다.

방향성하고 강도가 차이가 없는, 1과 0으로 이루어진 거 있죠.


페이스북

그냥 그래프라고 하는 명령어를 써주면 돼요.

그런데 우리 법률 네트워크 같은 경우에는 아까 보셨듯이 디렉션하고 웨이트가 다 있습니다.

그래서 멀티 다이 그래프 이거를 계속 써주시면 됩니다.

불러올 때 멀티 다이 그래프라고 할 수 있고요.

빈 그래프를 만들 수도 있고 그렇습니다.

네트워크의 크기인데요.

노드의 수는 곧 법률의 수겠죠.

그다음에 연결의 수는 법률과 인용 연결한 총 숫자입니다.

아까 보신 데이터에서 행의 숫자가 되겠죠.

헤더는 하나 빼주셔야 되고요.

이게 연구 재단법에서 공공기관운영에 관한 법률이 하나의 연결입니다.

한 줄씩이 다.

그래서 저희는 피인용 수, 많이 인용되는 법률이 과연 뭡니까?

저희가 7개 시점을 기준으로 한번 잡았습니다.

이거를 네트워크 분석에서는 내향중심성, 인디그리센트럴리티라고 합니다.

내향중심성이 공식이 여러 개가 있는데 네트워크X에서는 피인용수를 그대로 쓰는 게 아니라 노드수를 정교화를 해줍니다.

나눈다는 겁니다.

MX 인디그리 센트리티 하면 나옵니다.

쉬운데 문제는 결과는 딕셔너리 형태인데 딕셔너리는 밸류로 솔티드가 안 되더라고요.

키값으로 하면 안 되는데 우리가 왜냐하면 피인용도 상위권, 밸류값으로 해야 하는데 그래서 이거를 아이템스를 이용해서 쪼개서 리스트 오브 솔트를 해서 다시 쪼갰습니다.

코드를 한번 짜두면 편한 게 피인용과 타법인용 바꿀 때 그냥 컨트롤 H해서 인앤 아웃 바꿔주면 됩니다.

변수명도 자동으로 바뀌게 됩니다.

변수명에 인앤아웃으로 넣어줬으면요.

그래서 우리가 세 가지, 네트워크 사이즈, 정의하숨, 피인용수 탑텐, 피인용수 탑텐을 7개 년도에 대해서 반복시행을 해드리겠습니다.

이렇게 보라고 하면 안 보이시죠.

여기서 특이점은 노드수가 727개에서 1500개로 올라갈 때, 2배가 될 때 연결수는 7배가 증가했어요.

네트워크가 엄청나게 복잡해졌다는 겁니다.

그래서 사전작업을 할게요.

이제 최대한의 비중으로 시도를 했는데 보시기에 마음에 안 드시면 파이썬 실력, 미적 감각 둘 중에 하나가 문제가 있는 거고요.

그리고 기본 팔레트만 빌려와서 쓰고 나머지는 네트럴 리브입니다.

폰트 매니저로 폰트 설정을 하는데 알씨파람이라고 하는데 저녁을 안 하고 일일이 로곳, 로터라고 하는 변수를 만들어가지고 다 씌우도록 하겠습니다.

데이터를 왜 이렇게 원시적으로 입력했느냐 하면요.

법률명이 계속 바뀝니다.

보시면 예전에는 교육법이라고 하든가 이런 것들이 초중등교육법, 고등교육법 이런 식으로 분법이 돼요.

그런 사유가 굉장히 많습니다.

자본시장법도 아까 보셨다시피 여러 가지 법률에서 다시 합치고 합치고 쪼개고 쪼개고 그래서 연속성이 없어요.

그래서 사실 여기서 순위값을 뽑아내면 된다고 생각을 했는데 그냥 이렇게 넣었습니다.

 (웃음)

그래서 보시면 반복작업할 거를 함수로 정의를 해가지고 계속 쓰도록 하겠습니다. 

그래서 뭐 우리 네트워크플로어리브에서 쓰이는 축 옵션들 이런 것들 그다음에 범례, 레전드죠.

그다음에 폰트, 파일로 저장하는 것들을 한 방에 펑션에 넣어가지고 7번을 반복시키면 되겠죠.

10개를 다 그려볼게요.

피인용상위주요법률에 상위권에 있는 10개 법률이 30년간 어떻게 변했는지 보도록 하겠습니다. 

안 보이시죠?

인간은 계열이 4개 이상 되면 잘 보지 못한대요.

우리가 3차원도 사실은 저 같은 문과생은 버겁고요.

4차원 이상 되면 도저히 상상할 수 없죠.

그래서 잘라야 합니다. 계열을

그래서 아까 함수에서 사실 잘라서 쓸 수 있게 해놨어요.

그래서 0부터 2까지 이렇게 해두면 앞부분 3개 계열만 지금 같이 그려줄 수 있게 되겠습니다.

그리고 맵플롯리브에 일립스, 그러니까 타원이죠.

타원도구가 있어요.

그래서 패치를 이렇게 탁탁 붙일 수가 있거든요.

포인트를 주고 싶은 데 그거를 이용해서 물음표를 붙여놨어요.

이거는 우리 마음 속에 있는 그래프입니다.

법학을 배우면 민형상법이 기본이거든요.

가장 많이 인용되는 게 당연한 거예요.

당연한 건데 2010년부터 이상한 일이 벌어져요.

민법보다 많이 이용되는 저 물음표가 무엇인가?

그렇습니다. 

토건분야 법률들이 가장 많이 인용하는 상태로 법률이 30년간 변했습니다.

국토의계획에에 관한 법률, 토지수용법, 건축법, 공유수면매립법, 건설을 하기 위해 필요한 법들인데 가장 많이 인용되고 있습니다.

피인용은 SCI를 보면 인기도로 생각을 하는데 그런 거를 보면 상당히 우려스러운 점이라고 볼 수 있습니다.

법률의 기본구조라고 할 수 있는 민형상법보다 중요한 거 아니야? 비약이긴 하겠지만 그렇게 해석할 여지가 있습니다.

이것은 순위권에서 퇴장한 법률입니다.

교육법, 분법이 되면서 피인용수가 쪼개졌습니다. 

고등, 초중등교육법, 육아교육법.

국가공무원법은 여전히 많이 인용되는데 다른 법에 밀려서 사라졌고요. 

비송사건법은 법을 갈아엎었습니다. 

과태료에 관한 법률인데 우리 주차위반했을 때 내잖아요.

옛날에는 과태료규정을 법률에 넣을 때마다 비송사건법을 인용을 해줬어요.

그래서 그 항목마다 엄청 많이 인용이 되었어요.

그래서 이거는 인용의 낭비이고 질서위반행위규제법이라는 하나의 일반법을 만들어서 일괄적으로 규정을 해 주자라고 해서 싹 사라졌습니다.

이거는 법률 개혁의 사례죠.

이거의 반대편입니다. 

타법인용수.

어떤 법률들이 탑법 인용을 많이 생산해내고 있는가?

1위는 조세특례제한법입니다.

1400개 정도가 나가고 있는데요.

이게 어떤 법이냐 하면 법률 전문으로 하시지 않는 분들을 위해서 설명을 드리면 우리는 세금을 내는데 특정한 경우에 세금을 안 내도 되는 경우가 있어요. 

조세 감면이라고 하는데 안 대도 되는 거.

소득세법 ~~에도 불구하고 당신은 안 내도 됩니다.

이거 엄청 인용이 많이 돼서 안 내도 됩니다.

사업하시는 분들이 중요하게 생각합니다.

그리고 지방세법은 경우가 다른데 보통 다른 국세에 붙여서 지방세를 올려놔요.

다른 국세를 인용을 많이 하겠죠.

그런데 문제는 이겁니다. 

여기까지는 이해가 되는데 역사 속으로 사라진 비송사건법은 비슷한 맥락이고요.

이게 문제입니다.

평창올림픽을 한번 개최하기 위해서 우리는 500번이 넘는 타법인용을 만들어냈어요.

그리고 저 법률은 폐지되지 않고 살아 있습니다.

새만금 만들기 위해서 우리는 엄청나게 많은 타법인용을 만들어냈습니다.

보금자리주택, 공공주택도 마찬가지입니다.

제주도에 자치권을 주기 위해서 수많은 법률들을 제외해야 했습니다.

이 법에도 불구하고 제주도는 뭘 할 수 있다.

제주도의 자치권을 보장하기 위한 법률입니다.

취지들은 다 같은데 법률들은, 그런 거죠.

그러니까 개별적으로 옳은 행동을 했다고 생각을 하는데 구성의 오류입니다.

다 모아 놓으니까 타법인용이 특례라는 거거든요.

인허가의제는 원스톱으로 다 허가를 해줍니다.

사업 허가만 받으면 땅 개발할 수 있고 초지, 목초지도 훼손할 수 있고 이런 것들.

그래서 이런 개발 사업을 하기 위해서 국토나 토지에 관한 법률을 많이 인용하다 보니까 이거랑 이게 동전의 양면과 같은 거예요.

저쪽이 있었기 때문에 이쪽이 이렇게 된 겁니다.

관련된 거를 한번 보시면 우리 네트워크 상에서 특별법에서 특례법이 차지하는 비중이 어떤가 한번 내봤어요.

네트워크 노드에서 특례법 을 이프하고 인을 해봤습니다.

이프 노드 3, 4% 차지하던 것들이 2015년에 연결 기준으로 17%를 차지하게 됐고요.
법률 숫자 기준으로는 한 9%를 차지하게 됐어요.

이렇게 특별법으로 특례 인용으로 점점 법률이 복잡해지는데 우리가 이걸 계속 보고 있어야 되는 거냐 고민이 깊어지는 시점이라고 보입니다.

가장 정확한 거는 엣지에서 특별법, 특례법 제거하고 피인용수 변화 관찰하는 건데 전에 한 거라 생략하겠습니다.

이거는 코드입니다.

아주 간단합니다.

그냥 이프하고 인하고 사용해서 골라냈습니다.

엣지, 리스트 오브 튜플러스에서 0번째 엘리먼트가 인용하는 주체이고 두 번째 엘레먼트가 인용을 당하는 피인용되는 법률이죠.

그러니까 특별법에서 나오는 인용을 찾으려고 그러면 엘레먼트 제로에서 특별법이 있느냐, 특례법이 있느냐를 추출해내면 되겠습니다.

두 번째 분석내용입니다.

법률이 과연 복잡한가?

복잡성 이론 잘 모르시는 분들도 계셔서 설명하고 갈게요.

이겁니다.

고속도로망 같은 거는 정규분포로 그려요.

정규분포라는 게 서울로 우리나라 같은 경우 특이하긴 한데 서울이 많이 연결이 되어 있죠.

대충 히스토그램을 그리면 평균으로 모여 있어요. 

다른 도시와 연결되는 숫자가 도로망의 연결을 보면, 그런데 항공망은 허브 공항으로 몰리게 되어 있습니다. 

인천공항 엄청나게 많이 가는데 양양공항은 적습니다.

그러면 굉장히 연결 편수로 보면 불균등해집니다.

복잡한 네트워크는 사실 많이 나타나고 있습니다.

논란의 소지가 있긴 한데 항공망을 예를 들었고, 이거는 카이스트의 정하운 교수님이 바라바시라고 하는 분하고 만든 겁니다.

몇 명한테 옮겼냐를 가지고 히스토램을 그려보면 슈퍼 감염원이 생깁니다.

메르스 때도 굉장히 많이 여러 사람들이 병을 앓게 된 원인자가 계셨잖아요. 

몇 분 그거를 그려보면 극단값이 등장하는 겁니다.

그런 거를 복잡하다고 하는 거거든요.

세마틱 의미 네트워크고요.

그래서 추정을 하고 분석을 시작했는데 복잡한 네트워크 중 하나인데 스케일 프리 네트워크라고 하는데 이거를 항공망, 척도 없는 네트워크라고 하는데 왜 척도가 없느냐?

너무 불균등해서 평균이라는 값이 아무 의미가 없기 때문입니다.

이런 그래프는 평균하고 중간값을 내면 그 격차가 엄청 커요.

평균이 이 집단을 대표하지 못합니다.

그래서 이런 네트워크는 어떤 일이 일어나느냐? 

부익부빈익빈이 나타난다고 알려져 있습니다. 

인용연결을 많이 끌어당기는 사람이 많이 당겨요.

한번 허브가 되면 이길 수 없어요.

구글을 이길 수 있나요. 검색엔진에서?

없잖아요. 

그리고 20:80 법칙이 룰 오브 썸인데 이거를 통계를 내보면 스케일 프리 네트워크가 나타납니다.

이거는 통계를 봐야 해요.

역함수, 파워로우라고 하는데 한 수가 다른 수의 거듭제곱으로 표현되는 두 수의 함수관계라고 하는데 이게 나타나면 극단적으로 불균등한 통계라고 나오면 복잡한 네트워크라고 얘기를 하고 있습니다.

도형은 프렉탈 도형인데 이런 거를 무질서, 질서 사이, 카오스하고 스테틱한 상태의 경계, 임계점에 있는 거를 우리가 복잡성에 있다고 합니다.

독특한 성질들이 나타납니다.

예를 들어서 우리가 모래알을 하나씩하나씩 쌓다가 모래산이 되었는데 한 톨 떨어뜨렸는데 다 무너져내려요.

산사태라고 하는데 그런 현상, 임계점을 넘어갈 때 현상들을 복잡성이라고 얘기를 하고 있습니다.

이거는 파워로우라고 하는 라이브러리라고 하는데 알스토트가 만들었습니다.

이 사람이 처음으로 지프의 법칙을 검토하겠습니다.

자연어들은 언어가 사용되는 빈도수대로 이렇게 큐밀러티브 디스트릭트 펑션이라고 하는데 누적확률빈도를 그리면 이게 로그로 직선이 나오는데 역함수라고 하는 거거든요.

어나더같은 굉장히 많이 인용되는 게 있고 한 번씩밖에 사용 안 되는 게 굉장히 많아요.


이런 불균등한 분포를 보인다는 점이 지프의 법칙입니다.

파워로우의 기능이라는 거는 그 네트워크가 좀 불균등해 보이는데 정말로 복잡하냐를 검증해 주는 네트워크죠.

우리 인디그리 센트랄리티 , 피인용수 구했을 때 딕셔너리 살아 있으면 그 변수를다시 불러와서 실제 피인용수로 돌려주고 그렇게 우리가 쓰고 이거를 파워로우 연산할 때 로그 평면에서 되는 거기 때문에 0은 계산이 안 됩니다.

법률은 스스로를 인용하는 거 아니냐 이렇게 애드혹한 가정을 써가지고 1로 만들어줬습니다.
0에서 연산이 안 되는데 한 번도 인용이 안 되는 몇백 개의 데이터를 다 버릴 수 없지 않습니까?

그거는... 그래서 피인용수가 과연 역함수를 따르는가?

이거는 검증의 방법이고요.

이 디스턴스라는 게 있습니다.

이게 머신러닝 해보시는 분들은 손실함수랑 비슷한 개념이에요.

로그 손실함수에 가깝다고 제가 알고 있는데 로그 라이클리우드, 로그추정을 쓸 건데 그게 바로 로그 손실 함수가 최저가 되는 점에서 추정이 가장 잘됐다는 겁니다.

머신러닝이 잘 됐다는 거를 의미하는 겁니다.

역함수의 추정치, 그리고 이런 것들입니다.

보시면 저희는 얼마나 더 근접한지를 볼 때 2개간의 비교를 해줍니다.

우리 파워로우 역함수하고 비슷한 게 로그노멀이라고 로그정규분포라는 게 있어요.

로그를 씌웠을 때 정규분포가 되는... 반대죠.

그리고 역함수에 지수함수를 곱해서 잘려진 역함수 분포가 있습니다.

이것들을 서로 비교하는 거죠.

로그 최후 추정을 해가지고 피밸류는 우리가 아는 거랑 똑같습니다.

뭐가 유리하게 분포를 잘 설명해 주는가를 볼 겁니다.

코드는 굉장히 간단합니다.

로그 라이크리후드 뭐뭐 이렇게 넣어주면 됩니다.

저희가 이제 아까 누적분포함수 얘기를 드렸는데요.

우리가 이거는 관습상 복잡하게 이론을 할 때는 보안누적분포함수라고 합니다.
누적분포함수를 거울상으로 뒤집은 거예요.

어떤 확률분포에 대해서 확률 변수가 특정값보다 작거나 같은 확률이 누적분포함수인데 뒤집은 겁니다.

그리서 우리가 파워로우, 로그노멀, 그리고 잘려진 파워로그를 점선으로 그려주고 데이터를 흩뿌려줄 겁니다. 

스케터플롯으로 이거는 기본 사항이니까 넘어가겠습니다.

이게 25년 간이고요. 

가장 최근이 중요하겠죠.

최근의 데이터입니다.

이 점들이 다 하나의 법이에요. 다

이 법률이 인용되는 숫자를 의미하는 거고요.

Y축이라는 게 확률입니다.

그리고 X축이라는 게 인용된 횟수예요.

지금 지수로 표현된 게 보이시죠.

로그라 그렇습니다.

국토교통부이 상승보다 더 위에 있는데 우리나라에서 1000개 인용된다는 건데 우리나라 법이 1400개입니다.

민법상법형법건축법 순이고 피밸류는 0.05뿐만 아니라 더 유의합니다.

해석이 중요하겠죠.

이거는 그렇습니다. 

사실은 복잡계라는 거는 자연법칙입니다.

우리 법률 하시는 분들이 항상 하시는 말씀이 헌법 40조에 이렇게 되어 있습니다.

입법권은 국회에 속한다, 그리고 법률 교과서에 이렇게 나와 있습니다.

입법 재량은 무한하다.

민주적 정당성을 가지고 있는 국회의원이기 때문에 어떤 입법이든지 할 수 있다고 믿거든요.

우리는?

그런데 이 결과를 보면 아닌 거 같아요.

과거에 이미 만들어놓은 법률 구조를 벗어날 수 없어요.

입법을 갈아엎을 수 있느냐? 

이렇게 서로 법률 인용 관계가 복잡하게 얽혀 있는데 이거를 간단하게 만드는 거 법률의 가독셩.

우리가 법률을 읽을 수 있어야 법치 주의가 가능하잖아요.

그래서 이런 것들을 좀 고민을 해보고있습니다.

사실 파이썬이라는 것도 누구나 프로그래밍을 할 수 있게, 그리고 쉽고 가독성을 중요하게 여기는데 읽고 쉬워야 서로 소통이 가능하거든요.

법치주의도 내가 무슨 행동을 했을 때 어떤 법률을 적용받을지 미리 알아야 하죠. 
법률을 보면?

그런데 이렇게 복잡한 법률을 누가 읽을 수 있겠습니까?

법치주의가 망가지는 그런 과정에 있는 거죠.

거기다가 자연 법칙이 나타나는 이런 상태까지 있습니다.

그런데 아쉽게 우리가 잘못된 파워로우가 나왔는데 역함수를 발생시키는, 제네레이티브 모델이라고 하는데 선호적 연결이라고 합니다.

어떤 매력적인 노드가 네트워크에 있어서 새로운 연결이 추가될 때마다 그 연결을 인용한다는 겁니다.

민형법은 중요하니까 인용할 수밖에 없어요.

그런 노드간의 불균형성, 끌어당기는 불균형성이 있을 때 선호적 연결성이 나타나는데 저게 누적적으로 반복이 되면 네트워크가 성장을 하면서 새로운 노드가 추가를 하면 저렇게 아주 복잡한 형태가 나타난다는 겁니다.

그런데 이것이 잘려졌다는 게 네트워크 성장 제약 요인이 있다는 건데 이거는 제가 설명을 하고 있습니다.

혹시 도움을 주실 분이 있으면 언제든지 말씀해 주시면 감사 하겠습니다.

참고로 생물학 논문 이론을 보면 세포 성장의 물리적 한계가 있기 때문에, 네트워크 성장의 물리적 한계있기 때문에 발생하는 그런 현상이다라고 얘기를 하고 있습니다.

참고로 미국에서, 미국 법전이죠.

USC라고 하는데 법률 AI계에서 꽤 유명한, 다니엘 마틴 카츠라고 하시는 교수님이 계십니다.

그분이 분석을 해보니까 미국법은 서로 인용하는 관계가 로그노멀분포에 가깝다고 합니다.

파워로우는 아니래요.

저희는 사실 아까 보시면 제일 위에 있는 노란선이 파워로우, 그 밑이 로그정규, 그다음에 트런케이트인데 보면 큰 차이가 안 나요.

어떻게 보면 미국이랑 우리나라랑 비슷하다.

두 나라의 법 체계가 다르고 정치 문화도 다른데 비슷한 현상이 나타나고 있어요.

이 이론의 특징인 거 같아요.

어디서나 등장을 해요.

부지불식간에 정말 다른 어떤 대상인데 갑자기 복잡성이 나타나요.

뭔가 네트워크가 성장해나가고 발전해나가는 원리가 비슷해서 그래요.

법제를 해보면 프리퍼레이트어태치먼트 등장합니다.

여러분들이 새로운 라이브러리 만들 때, 코드를 쓸 때 맨날 쓰는 라이브러리 있으시잖아요.

유명한 거, 판다스, 데이터할 때 판다스를 쓸 수밖에 없는데 그런 거 인용숫자 집계 하면 굉장히 많잖아요.

그게 많이... 오늘 쓴 파워 로우 몇 번이나 쓰이겠습니까?

이런 것들이 법률에 있거든요. 

특히 아까 말씀해 주셨듯이 개별사항특별법 같은 경우는 특별법은 남을 인용을 하는데 특별법을 인용할 법률은 없어요.

특별법이라는 거는 어떤 사업을 하기 위해서 주로 특례를 주는 건데 자기가 다른 일반법에 예외를 주고 싶은 거 인용을 하는데 특별법을 누가 인용을 하지 않아요.

그런 것들이 이제 뭉쳐져서 이런 결과가 나왔다고 보입니다.

이거는 2005년에 미국의 스미스라고 하시는 분이 한 말씀입니다.

우리 법률은 가장 크고 접근성이 있고, 잘 문서화가 된 인간이 만든 네트워크다.

존재하는 네트워크 중 가장 접근이 가능하고 문서화가 잘 되어 있다.

오래된 미래죠. 

우리 위키문서나 코드 이런 것들 요즘 만들고 있지만 법률은 훨씬 오래되었습니다.

몇천 년이 되었는데 우리가 상호의존성이 있는 문서를 체계적으로 정리하는 방법, 인덱싱을 하고 서로 인용을 하고 이런 것들이 다 법률에서 미리 구현이 되어 있었던 거죠.

그래서 네트워크 분석을 하시는 분들이라면 법률 데이터에 대해서 좀 관심을 가질 필요가 있다고 저는 생각합니다.

그래서 왜 파이썬이냐를 말씀드리고 발표를 마무리하도록 하겠습니다.

파이썬 제가 사실 작년까지는 파이썬 안 썼어요. 

파이썬 모를 때 제가 저런 온갖 소프트웨어로 다 했습니다.

다 유료예요. 

아웃윗 허브는 크롤링, 매크로 익스프레스는 반복작업인데 파이썬에는 포문만 쓰면 되는데 다 저걸로 했습니다.

그리고 네트워크 전용인 유씨넷, 파젝을 따로 썼고요.

그러면 저쪽으로 왔다 갔다 할 때마다 CSV 떼서 넣어주거든요.

그런 일을 했습니다. 

(웃음) 

년도별로 수동작업을 우리 분석할 때 함수 만들어서 7번 하면 되는 거를 갖다가 실제로 했습니다.

한글 노드명 안 돼서 또 변환해서 다시 썼고요. 

도와주는 사람도 없고요. 

파이썬 같은 커뮤니티가 없어요.

그런데 파이썬 배우니까 이 그림은 유명하죠. 

이런 기분이었습니다.

아까 보시면 처음에 피인용, 타법인용 분석할 때 했던 거 변수 그대로 갔다가 파워로우 집어 넣으니까 바로 나왔는데 데이터 넣을 필요 없어요.

그냥 해주면 됩니다.

반복문 줬고요.

많은 커뮤니티에서 많이 와서 도와주시고요. 

한글 그대로 되고요.

물론 맵플로리브에서는 글꼴을 지정해 주지 않으면 깨집니다.

그런 문제가 있긴 한데 연구의 발전 가능성도 있죠.

아직 제 실력이 부족합니다만 NLP, 언젠가 법률에 대한 판례를 하겠다고 생각을 하는데 그런 것들이 파이썬의 파워풀함이 아닌가 생각을 합니다.

제가 이 자리에 있을 수 있게한 고마운 스터디를 소개를 하고 발표를 마무리할게요.

사이버스알파로우인데 법률 모르는 사람, 코딩 모르는 사람 모여서 서로 도와줍니다.

변호사들, 현업에 있는 사람들 하고 개발자들 서로 오셔서 지식 공유하는 겁니다.

파이썬 2018 코리아의 주제가 이런 게 아닌가 싶습니다.

키노트도 언어학, 심리학하신 분.

사실 파이썬이라는 게 프로그래밍 포 애브리바디 이렇게 시작하신 거잖아요.

사업 기획서에 보면, 애브리바디가 아무나인데 아무나에 저도 들어가지 않나.

저는 전문 개발자가 아니거든요.

그런데도 이렇게 파워풀하게 개발할 수 있게 한 이런 파이썬하고 파이썬 커뮤니티에 감사한 마음을 갖고 여기에 나왔습니다.

다음 시즌도 우리 알파로우 열리거든요.

많은 관심 부탁드립니다.

오늘 파이썬 커뮤니티 말씀을 드렸는데 이번에 못 나오셨지만 김경호 님, 저번, 저저번 도움을 많이 받았습니다.

제가 깃 허브를 잘 못 써요.

빨리 배울게요.

그전까지는 구글 사이트에 업로드를 해놨습니다.

파이썬, 파이썬 커뮤니티 감사합니다.

발표를 마치겠습니다.