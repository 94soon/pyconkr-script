https://www.youtube.com/watch?v=Kc0fq1WE7YI

이번 그 안에서의 파이썬 발표하게 된 하호준입니다.

지금부터 시작하도록 하겠습니다.

지금 보시는 이미지는 제가 제작한 이미지이고요.

저는 광고 게임 극장판 애니메이션을 만들고 있는 개발자가 아니고요.

아티스트입니다.

현재는 애니메이션 스튜디오에서 일하고 있습니다.

이번 발표는 3D 그래픽에서 어떻게 파이썬을 쓰이고 있는지 소개하는 차원으로 만들었습니다.

어떤 python이 쓰이는지 모르실 거라고 생각하고 제작하였습니다.

이 단어가 어색한 분들이 계실 것입니다.

이 단어는 외국에서 쓰이는데요.

저희는 디렉터라고 하면 감독이라고 생각하시는데 외국에서는 담당자라는 역할로 쓰입니다.

저는 테크니컬을 담당하는 역할을 하고 있습니다.

제가 말씀을 드렸는데요.

저는 제가 하고 있습니다.

저희 업계에서는 저는 룩을 만드는 부분에서 테크니컬 디렉터 부분을 하고 있습니다.

아트적인 마인드, 테크니컬 적인 마인드를 두 개 요구하고 있는데요.

저는 컴퓨터 공학을 2년 전공했는데요.

그리고 나서 디지컬영상제작전공에서 2년을 했는데요.

그 다음에 합성할 때 쓰는 소프트웨어 공부를 하면서 영상 관련된 어떻게 하면 미학적으로 좋은 이미지를 만들어낼 것인가를 공부하였습니다.

그 베이스로 지금껏 일을 해오고 있고요.

오늘은 테크니컬 마인드에 대해서 이야기해드리도록 하겠습니다.

오늘 발표에서는 이 테크니컬 마인드 중에서 python을 어떻게 하는지 보여드리고자 합니다.

그러면 일단 간략하게 3D 그래픽 제작과정을 보면 이렇게 됩니다..

이 외에도 중간중간에 FX가 들어간다든지.

말 그대로 쉐이프를 만들어내는 과정이고 그 뼈대를 짓는게 리깅입니다.

그다음에 쉐이딩은 말 그대로 메탈인지 나무인지 그 성질을 부여하는 파트입니다.

라이팅은 조명 쓰는 공간이고요.

3차원적인 공간에서 이 모든 과정을 투기이미지화하는 게 렌더링과정입니다.

저는 현재 쉐이딩 라이팅 렌더링 과정에서 일을 하고 있습니다.

그러면 이 과정에서 python에 대해서 말씀을 드리겠습니다.

대표적으로 오늘 설명드릴 것은 오토데스크사에 마야라는 것에서 python이 어떻게 되는지 볼입니다.

가장 많이 쓰이고 있는 소프트웨어 중에 하나이고요.

게임분야가 아니라면 거의 대부분의 스튜디오가 마야라는 소프트웨어로 제작하고 있습니다.

지금보시는 화면이 마야에서 제작하는 과정인데요.

이제 3차원 공간에서 하다 보니까 다양한 툴들이 존재합니다.

카메라로 만들면 평면적인 게 아니고 3차원적으로 실제처럼 잡게 되고요.

이런 과정 속에서 작업하는데 라이팅을 칩니다.

지금 방향성을 가지는 라이팅을 치는데요.

방향만 잡아주고 있습니다.

그렇게 해서 여기에 물체의 색을 나오하게 하는데 색을 입히는 과정인데 쉐이딩을 불러와서 간단하게 등록을 하게 됩니다.

이런 과정을 거치고 렌더링 가면 평면적인 이미지에서 렌더링3이 나오는 것이죠.

아이템 로테이션 돌리면 똑같이 이미지가 렌 결과로 나오게 됩니다.

강도를 조절할 수 있고요.

색도 조절할 수 있고 이런 과정이 좀 더 복잡하게 만들어진다고 생각하시면 됩니다.

세 가지 맥락들이 있습니다.

그다음에 세 번째는 데이터 어치브하고 트랜스퍼하는 이 세 과정들이 있습니다.

첫 번째는 인터페이스 커스터마이즈 디벨로프에 대해서 설명드리겠습니다.

마야에서 작동하는데

이게 Qt로 개발이 되어있어서 저희가 python에서 접근이 가능하고.

호환성이 높습니다.

이 부분은 처음부터 기술부서에 보시면 2011버전부터 마야의 모든 플래폼이 Qt로 되어있다고 되어져있습니다.

그렇게 해서 UI 커스터마이징이 가능한데요.

왼쪽에 보시면 마야에서 있는 목록을 보여주는 툴인데요.

오른쪽에는 커스터마이징을 한 것입니다.

왼쪽 이쪽 부분도 마야인 것이죠.

오른쪽에 새로추가했습니다.

그 과정을 한번 보여드리도록 하겠습니다.

아웃라인을 불러왔고요.

이 외에도 다음파트 소스코드를 통해서 pyside2로 되어있고요.

마야에서 제공하는 아웃라인 패널을 만드는 그 부분도 같이 불러오고.

그다음에 커스터마이징 버튼을 이용해서 여러 가지 버튼을 만드는 부분들을 불러왔습니다.

동일한데 다른 추가된버튼들을 유아이를 만들어낼 수 있습니다.

새로운 유아이를 저희가 python을 통해서 갖다 붙일 수 있는 것이죠.

아티스트들이 원하는 기능들을 커넥팅해주면 다양하게 수정해서 사용할 수 있게 됩니다.

Qt 디자인을 통해서 불러와서 사용할 수 있고요.

python이라는 언어가 마야에 들어오기 전에 MEL이라는 언어가 있었습니다.

이걸 마야 설치파일에 가보시면 MEL이라는 파일이 존재합니다.

거기에 자바스트립트, MEL 구문들이 있는데 이거 직접적으로 수정가능하고 새로 리부팅만 하면 됩니다.

python의 함수만 들어갈 수 있습니다.

그 안에 python실행명령어로 넣어주면 MEL이 실행되는 구간에 python이 실행될 수 있습니다.

이런 식으로 UI를 수정할 수 있고요.

그 다음에 데이터 컨트롤 가능하게 하는 부분은 import maya.cmds 라는 게 있습니다.

이게 자동으로 설치되는 패키지인데요.

마야에서 제공해주는 python 패키지입니다.

이렇게 어느 부분들을 할 수 있는지 설명이 되어있는데요.

거의 모든 부분들을 컨트롤할 수 있다고 보시면 됩니다.

크레이트 노드 들어가시면 설명들이 있습니다.

어떻게 쓰고.

복잡한데 제일 밑에 보시면 python이그젬플 복사하셔서.

마야에 가셔서 스크립트 에디터라는 게 있습니다.

붙여넣기 하셔서 실행을 하시면 지금은 노드들이 생성이 되는 것이죠.

이렇게 함수가 어떠한 역할을 하는지 손쉽게 확인할 수 있습니다.

그리고 데이터 아카이브 트랜스퍼인데요.

메시라든지 쉐이더에 어트리뷰트들.

컨버팅을 하게 되는데 저 같은 경우는 텍스트화 하는 걸 좋아합니다.

JSON 파일로 컨버팅을 해서 재활용하는 것이죠.

아까 색을 입혔던 속성창인데요.

그 값들을 마야에서 제공하는 아까 cmds 명령에 어트리뷰트를 리스트화시키는 것이죠.

그 두 개 쓰면 다음과 같이 리스트화시킬 수 있습니다.

지금 쉐이더에 그 현재 수치값 이런 것들을 리스트화 시킬 수 있습니다.

그렇게 -한 수치를 JSON 파일로 내보내는 것이죠.

이때부터는 하고 싶은대로 할 수 있습니다.

라이브러리화해서 할 수 있고 두 개를 믹스시킬 수 있고.

데이터를 뽑을 수 있습니다.

다음은 python하신다면 마야의 python이 있다고 한다면 몇 버전을 쓰고 있는지 궁금하실 것아요.

파이썬은 2.7버전, Qt는 5.6.1버전 작동하고 있습니다.

버전을 확인하는 가장 간단한 방법 중에 하나는 구글에 검색하는 것입니다.

구글에서 검색을 하시면 보통 제일 첫 번째 나오게 됩니다.

그래서 클릭하고 들어가시면 여러 정보들이 나오는데요.

그 정보 중에서 중간보시면 버전권한정보들이 있습니다.

그래서 그 정보를 보시면 지금 18기준으로 pyside는 2.0이고 python은 2.7, Qt는 5.6.1입니다.

마야를 켜서 가능한데 이걸 말씀드리는 이유는 최신 버전으로 확인할 때 에는 시간적 여유없을 수 있습니다.

그 이유가 제가 프로덕션을 진행하다 보면 좋은 기능들이 들어올 때가 있습니다.

그러면 여러 파트에서 부끄럽게 버전이 업그레이드하길 원하는데요.

다음버전으로 올라갈 때 문제가 없느냐 물어보거든요
실제로 마야 17버전에서 Qt가 4에서 5로 올라갔었습니다.

그래서 Qt를 명령어들에 옛날 것을 쓰면 다 바꿔야 되어야 하는 되는 것인데요.

매번 이렇게 버전을 확인하기에는 좀 애매한 부분들이 있습니다.

그럴 때는 Vfx.

이런 산업에서 쓰이는 여러 툴권한버전들을 공유를 하십니다.

18버전에서는 어떤 버전 그런 정보들을 공유를 하는 것이죠.

python권한정보들이 있는데요.

이 버전은 모든 소프트웨어들이 따라서 가고 있습니다.

2.79에서 부분이 되어있습니다.

2019버전으로 확대해보면 2020년부터 들어간다고 되어져있습니다.

한 버전이 나오고 그 다음버전에서 python3버전으로 가야 되는 것입니다.

python의 개발환경은 자체에서 피와이가 들어오게 할 수 있고 저 같은 경우에는 패스로 잡아서 하드로 따로 작업을 하고 있습니다.

룩에 도움을 줄 수 있는 python 코드들은 다양한 것들이 많은데요.

그중에서도 여기에서 다 설명못하기 때문에 랜덤을 어떻게 하는지 이 부분이 룩에서 왜 중요하게 쓰이는지 설명드리고자 합니다.

룩 작업을 하다보면 컬러 베리에이션과 트랜스퍼 베리에이션이 중요할 때가 있다
일상적인 컬러도 저희가 일상적인 소화기를 보더라도 각각의 소화기들이 미세하게 색이 다릅니다.

한 개의 어세스는 가능합니다.

실제로 작업한다는 것은 그게 수백개 수만개 필요하다는 것이죠.

수백개 수만개 베리에이션를 하기에는 생산성이 떨어지게 됩니다.

이 베리에이션이 중요한 이유는 개조라는 표현을 사진에서 하게 됩니다.

지금은 8칸의 색인데요.

이런 이미지보다 중간-들이 있는 여러 가지 사람이 느끼기에 풍부한 이미지, 더 좋은 이미지라고 느끼게 되는 것이죠.

중간중간 미색작업들을 많이 하는데요.

그런 것을 랜덤으로 한번 표현해보도록 하겠습니다.

지금은 큐브를 마야상에서 여러 개를 만들어놨고요.

각각의 큐브들은 분리되어져있습니다.

그리고 위치값도 와이축 높이값은 같은 위치에 존재하고 있는데요.

아주 깨끗한 타일의 형태들이 나오게 됩니다.

각각의 위치도 같고 쉐이딩도 강도도 다 똑같고요.

이 이미지를 변형된 작업을 시작할 것인데요.

다음과 같은 스크립트를 쓰려고 합니다.

첫 번째는 임포트 랜덤을 했고요.

마야에서 선택된 정보를 리스트화해서 받는 구문입니다.

그리고 다음에는 보시면 랜덤을 0와 1값을 떨어지게 합니다.

선택된 것 중에서 0와 1로 선택값을 주면서 필터를 하는 것이죠.

그래서 이 정보를 쉐프라는 부분이 있습니다.

거기에 등록할 수 있는데요.

미리 등록한 것으로 실행하도록 하겠습니다.

전체 박스들을 선택을 하고요
버튼을 누르면.

선택된 것에서 필터링이 됩니다.

랜덤으로.

지금보시는 것까지만 필터링이 되고요.

그 상태에서 위치값을 조정해주는 것이죠.

다시 한 번 더 랜덤이다보니까 다른 값들을 주기 위해 수치를 조정하게 되고요.

특정부분에 좀 더 랜덤을 주고 싶으면 그 특정부분을 잡고 랜덤을 주게 되고요.

그렇게 해서 랜더링을 걸어보시면 다른 형태의 베리에이션들이 생기게 됩니다.

지금은 큐브로 보시는데요.

다 완성된 타일이라고 생각손해면 이제부터는 변화되는 리얼감이 살리게 되는 것입니다.

타이들이 깔려있을 때 위치가 같지않습니다.

그런 거를 아티스트가 일일히 다 해주기에는 저희가 생산성이 중요하기 때문에 생산성이 떨어지게 되는 것이죠.

실제로 시간을 내서 작업해도 됩니다.

프로젝트를 하다보면 많은 규모의 부분을 랜덤을 주는 경우가 생기거든요.

쉐이딩 수치들이 지금 같습니다.

실제로 코팅을 바르더라도 모든 제품의 코팅을 값이 다를 수는 없습니다.

다른 색의 코팅을 입히게 되는데요.

지금 좀 보시면 조금 더 이미지가 달라져간다는 것을 보실 수 있습니다.

미색, 색을 섞게 되는데요.

그다음 쉐이더를 등록할 때 에는 살짝 푸른느끼가 있는 쉐이더를 등록을 하게 됩니다.

모두 적용이 되도록 만들어두었고요.

지금은 -1에서 1값으로 되어있는데 큰 차이를 지금은 못 느껴지실 것입니다.

그래서 잘 안 보이시죠?
저도 하면서 해본 것인데 여기에서 -10을 입력할 것입니다.

보시면 값이 타일이 오래되어서 많은 사람들이 지나가서 눌린듯한 느낌이 드는 것이죠.

지금은 수치가 강한데요.

실제로 돌아가서 -1에서 1값으로 로테이션을 랜덤으로 주게 됩니다.

이렇게 하면 살짝씩 로테이션이 먹어져 있고 다양한 부분에 베리에이션이 들어가있는 이미지를 만들어낼 수 있습니다.

이렇게 한을 이미지의 결과는 1야 에는 이런 평면적인 이미지거든요.

다음번째는 이런 타일링이 되어있는 이미지입니다.

실제로 이거는 제작과정에서 썼고요.

중국인가 바닥에 중국고전 그러니까 오래된 문화유적지 가보시면 바닥에 타일로 깔아놨습니다.

그런 타일을 지금도 보시면 미세하게 깨져있거나 로테이션이 돌아가있는 부분들이 있습니다.

실제로 프로젝트에서 지금은 박이지만 실제로 되어져있는 돌로 실제로 이 작업을 해서 프로덕션을 진행하였습니다.

이 방식을 확장을 한다면 다양한 부분들에서 코드를 통행서 룩에 영향을 줄 수 있게 됩니다.

그리고 한 가지 팁은 저희가 쓰는 이미지가 다른 산업에서보다 다른 이미지들이 있습니다.

python에서의 HDR 이미지라는 걸 보셨을 것입니다.

일반적인 저희가 쓰는 이미지가 8비트 이미지라면 16비트 32비트 이미지를 쓰는 것이지요.

렌더링 과정을 거치면 지금은 16비트 이미지를 뽑아내게 되거든요.

리사이징하고 싶다든지 여러 수정을 하고 싶다든지 python은 어떻게 안 되느냐 말을 듣게 되거든요.

아쉽게도 저희가 쓰는 이미지들이 작업을 할 수 없습니다.

그러면 이 이미지들 어떻게 처리하냐면 IM은 이런 영화들의 CG를 제작하는 스튜디오입니다.

VFX 산업에서 이 패키지를 활용하시면 거의 대부분의 제가 작업해본 모든 VFX 산업에서 이용이 가능합니다.

python으로 되어있습니다.

실제적으로 사용하셔도 되고 cmd 배치명령모드로 되어있습니다.

cmd로 간편하게 돌리는 편입니다.

VFX. ORG로 가시면 오픈소스들의 목록들이 있습니다.

가장 최신은 업로드가 안 되는 있습니다.

여기에서 보시충분히 어떤 것을 하실있는지 확인할 수 있습니다.

이번대표에 나온 이유이기도 한데요.

저희가 쓰는 소프트웨어가 맥스 마야 누크 C4D 등 많은 게 있는데 이 모든 소프트웨어들이 python을 지원을 합니다.

pycon 참가가 세 번째 인데 작년에 한번 있었고 올해도 앞서서 있었고 저희가 이번에 세 번째 인데 python이 어떻게 쓰이는지가 많이 안 나오는 것 같아서 발표를 준비하게 되었고요.

많은 분들이 접근을 해보셨으면 좋겠습니다.

지금보시는 화면은 제가 회사입사할 때 입사용으로 개발한 툴입니다.

실제 라이브러리 툴인데요 마야보다는 Qt로 개발이 되어있습니다.

실제적인 환경 이미지를 갖고 와서 치게 되거든요.

그 소스를 찾는 게 굉장히 시간을 소비할 때가 많습니다.

제가 직접적으로 데이터에 접근해서 python에 접근할 수 있는 툴을 만든 것이고요.

지금은 HDR 이미지인데요.

여러 목록들을 볼 수 있으면서 갤러리 모드를 어떠한 이미지가 내가 작업하고 있는 것에 좋은지 아티스트가 확인해볼 수 있습니다.

또 많은 이미지들을 쓰다 보니까 이 이미지들을 매번 찾을 수 없습니다.

괜찮은 이미지들은 확인을 하고
이거는 연동을 시켜놓은 것입니다.

하나씩 모읍니다.

하나씩 모아서 보통 하늘이 좋아보이는 이미지들을 모으고 있고요.

이렇게 해서 보시면 목록과 상관없이 지금 보는 이미지들만 나오게 되고 북마크를 입력하게 됩니다.

자동차 기본 야외 HDR.

그렇게 해서 보면 다시 그 북마크가 불러와져있고요.

그 상태에서 누크란 툴인데 수정을 할 때에는 보통 누크에서 합니다.

다 자동으로 되도록 그렇게 만들었고요.

이제 버튼을 누르면 자동으로 돔라이트 사용하게 되는데 세팅되어서 해당 HDR 이미지를 잡아주게 됩니다.

이제 다음은 이와 유사하게 쉐이딩을 아카이빙하게 되는 것입니다.

미리 매번 아티스트가 하게 되면 반복적으로 사용하게 되는 쉐이더들이 있습니다.

매번찾아가는 것보다는 시각적으로 라이브러리화하는 것이 도움이 될 것 같아서 하게 되었습니다.

앞서 봤듯이 쉐이딩 디테일 확인하기 위해서 확대할 수 있도록 이렇게 만들어놨고요.

부끄럽게 여러 쉐이더 정보들을 확인할 수 있습니다.

그래서 여러 개의 셈네일도 볼 수 있도록 제작했고요.

다양한 환경에서 쉐이딩이 어떻게 333반응하는지 보고자지 만들었습니다.

실제로 버튼 누르면 그 쉐이더가 오브젝트에 자동으로 업사이드해서 들어옵니다.

그거를 그대로 어사인하면 동일한 쉐이더가 어사인이 되게 되는 것이지요.

이렇게 활용을 한다면 매번 할 때마다 새로운 쉐이더를 만드는 시간이 많이 줄어들게 됩니다.

그리고 다른 재질의 쉐딩도 불러와서 어사인해서 빠른 시간 내에 다른 재질을 렌더링을 걸어보고요.

지금은 사실상 마야에서 코드보다 Qt코드가 많습니다.

또 이걸 작업하다 보면 렌더링이라는 과정은 마야에서 이루어지는데요.

썸네일을 매번 만들기 위해서 여러 정보들을 해야 합니다.

노드정보들을 긁어옵니다.

여기에서 사용된 텍스트 파일이 용량이 얼마인지 확인할 수 있습니다.

용량이 얼마나 되어있다.

자기가 파일패스 경로를 찾아서 분석하게 됩니다.

옹량을 체크한다는 것은 비용과 연관이 있습니다.

아래 보시면 썸네일 이미지가 없는 쉐이더가 있는데요다며
따로 렌더링 해서 해야 합니다.

지금 마야를 새로키지 않아도 바로 렌더링을 걸어서 썸네일 미이지를 만들 수 있도록 제작을 해두었습니다.

지금은 이 썸네일 경로도 자동으로 들어가도록 해두었고요.

이때에는 직접적으로 저장해서 가져갈 수 있도록 해두었습니다.

아티스트 입장에서 보면 지금 많이 이용하고요.

지금 보시는 화면은 그 기능을 활용해서 현재 작업하고 있는 씬 외에 다양한 공간에서 라이팅 결과를 보기 위해 활용하는 방법입니다.

지금보시면 다양한 공간에서의 프리셋들이 갖추어져있습니다.

선택을 바꾸고 렌더링을 돌리게 되면 또 다른 공간에서의 정보를 볼 수 있게 되죠.

이 기능은 마야에서는 비슷하게 최신버전에서 구현되어있습니다.

이게 4, 5년 전에 제작한 영상이거든요.

그때는 이 기능이 없어서 아티스트로서 공부를 할 때 많은 불편들이 있어서 직접 제작을 하게 되었습니다.

다양한 쉐입의 형태에서 어떻게 재질이 보이는지 손쉽게 확인할 수 있고요.

바로 에셋으로도 등록되도록 그렇게 제작하도록 해두었습니다.

이렇게 하면 라이브러리화를 빠르게 시킬 수 있습니다.

방금같은 툴들도 이 세 가지가 모두 구성이 되어있습니다.

인터페이스를 새로만들었고요.

마야상에서 쉐이더가 자동으로 들어오도록 했고요.

쉐이더가 아카이빙되고 자동으로 구현한 기능들입니다.

이처럼 저같은 경우에는 아트작업을 같이 하면서 python을 작업하고 있습니다.

하루에도 오전에는 그림작업을 하다가 오후부터는 이게필요해 해서 python창을 열어서 작업하기도 하고요.

저희회사에도 전문적으로 팀이 있습니다.

그 팀에서는 장기적으로 지속성을 개발하고요.

저는 장기적으로 가는 게 있지만 지금 당장필요하고 아티스트 친화적인 것으로 만들게 됩니다.

자발적으로 만드는 코드도 많습니다.

제가 일하면서 필요성을 느끼는 것들이 많기 때문에 그런 부분을 테크니컬 디렉터라고 이해하시면 좋을 것 같습니다.

테크니컬 디렉터는 현장성이 높습니다.

가끔은 보통 제가 만들고 다른 사람들을 쓰게끔 하는데요.

가끔 쓰다가 정말 좋구나 제 스스로 느낄때도 있습니다.

생산성과 정확성을 높이게 되고요.

제가 직접적으로 쓰고 만들고 하기 때문에 정확성이 되게 높다고 생각합니다.

이상 제 발표를 마치도록 하겠습니다.
