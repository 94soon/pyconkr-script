안녕하세요? 

발표를 하게 될 김슬이라고 합니다.

이런 주제를 가지고 발표를 하기로 했는데요.

혹시 이거에 관심이 있어서 오신 분 있으세요? 생각보다 있으시네요.

혹시 여기 나와 있는, 밑에 나와 있는 것들 중에 써보신 것 있으세요? 

혹시 Django 익스텐션 써보신 분? 

디버그 툴만 써보신분? 

ngork 써보신 분? 

세 가지를 다 써보신 분이 의외로 많이 안 계시네요.

그러면 딱 적절한 것 같아요.

왜냐하면 이 도구들이 쓰기 너무 쉽거든요.

너무 쉬워서 발표할 거리가 너무 없어요.

그래서 분량 조절이 큰일났는데, 알게 된 것만으로도 유용하실 것 같아서 그나마 다행이에요.

이 세미나는 나만의 레시피인데 나만의 레시피가 아니어서 죄송하고요.

이 발표의 정확한 제목은 사실은 이겁니다.

디버깅을 할 때 여러 가지 부분들이 있지만 작업을 할 때 유용하게 할 수 있는 도구들이고요.

어떻게 유용한지 알려드리겠습니다.

일단 저는 김슬이라고 하고요.

평범한 개발자고 지금은 어쩌다 보니 두 언론사에서 개발을 하고 있고 요.

정기 코딩 모임을 하고 있습니다.

개인 프로젝트를 하고 있고요.

날짜를 잘못 잡아서 오늘로 잡았어요.

끝나고 또 가야 돼요.

오늘 일정을 심하게 잘못 잡아서, 원래 이사도 오늘이었는데 이사도 내일로 미뤘어요.

Django 익스텐션 디버거에 대해서 말씀을 드리겠습니다.

pip로 설치가 가능하고요.

앱 이름만 추가를 하면 바로 사용을 하실 수 있어요.

이렇게 추가만 하면 Django에서 메시지에 추가를 해 주면, 한 스크롤을 넘어갈 정도에 굉장히 많은 명 령어가 생기고요.

이 중에서 셋 플러스랑 런서버 플러스에 대해서 살펴보겠습니다.

슬라이드를 만들면서 느낀 점이 슬라이드로 보는 것보다 데모로 보는 게 이해하기 편할 것 같아요.

그래서 직접 보여드릴게요.

django 익스텐션은 지금은 미리 설치을 해 놨는데요.

메시지 파이를 하면 이런 식으로 명령어가 추가가 되는 것을 보실 수 있고요.

런서버를 하면, 얼마 전에 오픈한 사이트인데 이게 로컬에서는 그냥 런서버를 한 것과 차이가 없을 거예요.

문제가 없을 때는 거의 비슷하게 뜨고요.

그런데 이 페이지에 오류가 있을 때, 일부러 서치 페이지에 오류를 내 볼게요.

원래는 숫자로 변환을 해야 되는데 변환을 안 했다고 가정을 해 보겠습니다.

런서버 플러스로 실행을 해 주셔야 되고요.

그러면 오류 화면이 다르게 뜨죠.

혹시 이거를 전에 보신 분? 의외로 많이 없네요.

혹시 웹 개발은 하시나요? 웹 개발 하시는 분? 그러면 이 장면 봤을 때 되게 즐거우실 수 있어요.

오류 스택들이 뜨고 있는데요.

방금 오류를 일부러 넣은 지점이 이 지점이었죠.

오류가 난 지점에 아이콘이 뜹니다.

이 아이콘을 눌러주시면 바로 python 코드가 실행이 되는 콘솔이 고요.

네 이런 반응을 기대했어요.

그래서 이 시점에 실행하고 있었던 변수들을 전부 다 접근 가능합니다.

방금 이어가 숫자인 것을 확인할 수 있고요.

그래서 이걸 바꿔주면 잘 실행이 되는지 확인을 해 보시면 바로 실행이 되는 것들을 확인을 해 보고 잘 되는 구나 하면 다시 그대로 고쳐주고 실행하실 수가 있습니다.

이게 런서버 플러스라는 명령어를 사용한 개발 서버였고요.

방금 한 이야기들의 슬라이드 버전입니다.

슬라이드보다 데모가 편하더라고요.

이게 팁이에요.

원하는 위치에서 오류를 내고 싶다.

제일 오류를 쉽게 내는 방법.

그 지점에서 내가 원하는 지점에서 콘솔을 띄워보고 싶다고 하면 1/0 넣으시면 됩니다.

django를 개발을 하다 보면 모델을 다룰 때 실행을 하면 제일 먼저 하는 것들이 어떤 것들이죠? 사용하는 모델 같은 것들을 리부트를 하고, Django에서 사용하는 유틸을 리포트를 하고요.

이런 것들은 거의 실행을 할 때마다 매번 쳐주는 코드들인데요.

이 셀 플러스 같은 경우에는 기본으로 해줘요.

그리고 Django에서 많이 사용하는, 특히 디비의 쿼리를 생성할 때 많이 사용하는 것들도 이미 다 기본 으로 해 줍니다.

그리고 쉘도 기본 python이 아닌 것을 볼 수 있고요.

자동완성이나 이런 것들이 훨씬 좋거든요.

슬라이드를 보기 전에 이 부분도 데모를 먼저 보여드릴게요.

이 쉘 플러스에 아주 재미있는 옵션이 있어요.

노트북이라는 옵션을 주면 그 쉘을 노트북에서 바로 사용하실 수가 있습니다.

이거는 지금 Django 쉘이에요.

그래서 모델들이 이미 다 되어 있어요.

원래 Django 쉘에서 작업하시다 보면 항상 써야 되는 코드들이 뭉터기로 있다 보니까 다른 메모장에 만 들어놓고 매번 코드 수정할 때마다 쉘에서는 바로 반영이 안 되니까 다시 시작하고 하잖아요.

그런데 노트북으로 사용을 하시면 그런 것들을 하실 필요가 없이 바로 저장되어 있는 것들을 다시 사 용하실 수가 있습니다.

이렇게 하면 가장 결함이 많은 차들을 뽑아볼 수도 있는 거죠.

방금 데모로 보여드린 내용들이고요.

그래서 쉘 플러스를 사용하면 노트북 모드를 사용하실 수 있습 니다.

Django 리버그 툴바.

굉장히 유용한데요.

이것도 비슷하게 PIP으로 설치가 가능합니다.

얘는 설치해야 될 곳이 조금 더 있어요.

인스톨드 앱스에도 추가를 해야 되고, 아까는 디버그의 경우에만 추가를 했거든요.

IP 같은 것들 개발 자에게만 보이도록 설정을 할 수 있어요.

그래서 굳이 디버그에만 추가하지 않아도 되는 그런 보안이나 여러 가지 이유들로 그렇게 하는 게 더 좋겠지만요.

그리고 앱스 외에 미들웨어에도 추가를 해 주셔야 됩니다.

그렇게 추가를 해 주시면 오른쪽에 이 부분이 새로 생겨요.

이게 툴바에서 제공을 해 주는 부분이고 요.

버튼을 누르면 이 화면을 보여주는데 사용한, 화면을 로드하는데 들어간 시간도 보여주고 Django가 사 용하는 있는 세팅들, 그리고 웹 브라우저의 해더들도 보실 수 있고요.

특히 재미있는 부분이 SQL를 보실 수 있거든요.

이 페이지를 표시하기 위해서 사용한 SQL를 바로 보 실 수 있습니다.

완전 엉망인 걸 보실 수가 있는데...

실제 셀렉트가 어떻게 되는지 그 결과들을 바로 볼 수 있어요.

결과도 바로 볼 수 있고 실행계획도 볼 수 있습니다.

화면이 느리면 이런 디버그 툴바의 SQL를 보면서 튜닝을 할 수 있는 거죠.

그리고 얘네가 어느 정도는 거의 같은 쿼리가 실행이 됐으면 이렇게 표시를 해 줘요.

완전히 같은 부분이 4번이나 실행이 됐다 정리를 하라.

이런 것들을 보고 하시면 되죠.

다시 발표자료에는 방금 보여드린 내용들이 있고요.

ngork이라는 부분은요.

예를 들면 슬랙 봇 같은 것을 만든다고 하면 로컬 호스트에서 개발을 하고 있다고 하면 어떤 주소를 넣으시겠어요? 지금 내가 여기서 개발을 해야 된다.

집에서 개발을 한다고 하면 내 집에 본인 IP 같은 것들을 넣을 수 있겠죠.

그런데 저희가 코딩을 할 수 없는 곳에 있다.

여기서 인터넷을 잡아서 쓰고 있다고 하면 슬랙이 어떻 게 접근할 수 있을까요? ngork을 사용을 하시면 명령이 굉장히 간단해요.

맥 쓰시는 분들은 프로토콜 이름이랑 코드 번호를 넣으시면 명령어 한 줄이면 원격에서 이 도메인을 줘요.

그래서 이 도메인으로 들어가면 여기 보이시죠? 로컬 호스트 8765번으로 코워딩을 해 줍니다.

https도 돼요.

이 도구의 되게 유용한 점 중에 하나가 인스펙트라는 걸 기본으로 제공을 해 줘요.

터널을 통해서 접근한 요청들을 전부 다 볼 수 있습니다.

방금 퍼블릭 url로 접근한 내역들별로, 조금만 확대를 할게요.

특히 못 같은 걸 만든다고 하면 그쪽에서 보내주는 포스트 값도 여기에서 바로 확인할 수 있어서 개 발하는데 활용하실 수 있습니다.

이런 부분이 있고요.

제가 발표 분량 조절에 실패했다고 했는데 사실 벌써 끝났어요.

이게 다거든요.

방금 설명한 내용들이고요.

어떤 도구들이 있는지만 알면 사용하기가 너무 쉬운 것들이라서 특별하게 말씀드릴 것들이 많이 없었는데 혹시 질문 있으신가요?

